imap jj <ESC>
imap ,, =>

nmap <Leader>m :wa<CR>:make<CR><CR><CR>:cw<CR> "儲存所有檔案並且編譯透過make後打開quickfix查看有無錯誤
map <S-H> :bp <CR>
map <S-L> :bn <CR>

let g:gist_clip_command='pbcopy'
let g:gist_detect_filetype = 1
let g:airline_powerline_fonts=1
let g:syntastic_javascript_checkers=['eslint']
let g:syntastic_check_on_open=1


" Let jsx syntax no need require jsx extension
let g:jsx_ext_required = 0

set shiftwidth=2                " Use indents of 2 spaces
set tabstop=2                   " An indentation every four columns
set softtabstop=2               " Let backspace delete indent
set regexpengine=1 "好像可以幹嘛 regexp 之類的

"nnoremap <leader>ff :FufFile <CR>
"nnoremap <leader>fb :FufBuffer <CR>
"nnoremap <leader>fr :FufRenewCache <CR>

map <C-f> :call JsBeautify()<cr>
" or
autocmd FileType javascript noremap <buffer>  <C-f> :call JsBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <C-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <C-f>> :call CSSBeautify()<cr>

" 80 columns line
"if exists('+colorcolumn')
  "set colorcolumn=80
"else
  "au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
"endif
